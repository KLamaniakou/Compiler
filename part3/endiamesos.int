1: begin_block max3 _ _ 
2: + counterFunctionCalls 1 T0 
3: = T0 _ counterFunctionCalls 
4: > x y 6 
5: jump _ _ 10 
6: > x z 8 
7: jump _ _ 10 
8: = x _ m 
9: jump _ _ 16 
10: > y x 12 
11: jump _ _ _ 
12: > y z 14 
13: jump _ _ _ 
14: = y _ m 
15: = z _ m 
16: retv m _ _ 
17: end_block max3 _ _ 
18: begin_block fib _ _ 
19: + counterFunctionCalls 1 T1 
20: = T1 _ counterFunctionCalls 
21: < x 0 23 
22: jump _ _ 25 
23: retv 1 _ _ 
24: jump _ _ 40 
25: == x 0 29 
26: jump _ _ 27 
27: == x 1 29 
28: jump _ _ _ 
29: retv 1 _ _ 
30: - x 1 T2 
31: par T2 CV _ 
32: par T3 RET _ 
33: call fib _ _ 
34: - x 2 T4 
35: par T4 CV _ 
36: par T5 RET _ 
37: call fib _ _ 
38: + T3 T5 T6 
39: retv T6 _ _ 
40: end_block fib _ _ 
41: begin_block isPrime _ _ 
42: begin_block divides _ _ 
43: + counterFunctionCalls 1 T7 
44: = T7 _ counterFunctionCalls 
45: // y x T8 
46: * T8 x T9 
47: == y T9 49 
48: jump _ _ 51 
49: retv 1 _ _ 
50: jump _ _ 52 
51: retv 0 _ _ 
52: end_block divides _ _ 
53: + counterFunctionCalls 1 T10 
54: = T10 _ counterFunctionCalls 
55: = 2 _ i 
56: < i x 58 
57: jump _ _ 69 
58: par i CV _ 
59: par x CV _ 
60: par T11 RET _ 
61: call divides _ _ 
62: == T11 1 64 
63: jump _ _ 66 
64: retv 0 _ _ 
65: jump _ _ _ 
66: + i 1 T12 
67: = T12 _ i 
68: jump _ _ 56 
69: retv 1 _ _ 
70: end_block isPrime _ _ 
71: begin_block quad _ _ 
72: begin_block sqr _ _ 
73: + counterFunctionCalls 1 T13 
74: = T13 _ counterFunctionCalls 
75: * x x T14 
76: retv T14 _ _ 
77: end_block sqr _ _ 
78: + counterFunctionCalls 1 T15 
79: = T15 _ counterFunctionCalls 
80: par x CV _ 
81: par T16 RET _ 
82: call sqr _ _ 
83: par x CV _ 
84: par T17 RET _ 
85: call sqr _ _ 
86: * T16 T17 T18 
87: = T18 _ y 
88: retv y _ _ 
89: end_block quad _ _ 
90: begin_block leap _ _ 
91: + counterFunctionCalls 1 T19 
92: = T19 _ counterFunctionCalls 
93: % year 4 T20 
94: == T20 0 96 
95: jump _ _ 99 
96: % year 100 T21 
97: != T21 0 102 
98: jump _ _ 99 
99: % year 400 T22 
100: == T22 0 102 
101: jump _ _ 104 
102: retv 1 _ _ 
103: jump _ _ 105 
104: retv 0 _ _ 
105: end_block leap _ _ 
106: = 0 _ counterFunctionCalls 
107: inp i _ _ 
108: out i _ _ 
109: = 1600 _ i 
110: <= i 2000 112 
111: jump _ _ 119 
112: par i CV _ 
113: par T23 RET _ 
114: call leap _ _ 
115: out T23 _ _ 
116: + i 400 T24 
117: = T24 _ i 
118: jump _ _ 110 
119: par 2023 CV _ 
120: par T25 RET _ 
121: call leap _ _ 
122: out T25 _ _ 
123: par 2024 CV _ 
124: par T26 RET _ 
125: call leap _ _ 
126: out T26 _ _ 
127: par 3 CV _ 
128: par T27 RET _ 
129: call quad _ _ 
130: out T27 _ _ 
131: par 5 CV _ 
132: par T28 RET _ 
133: call fib _ _ 
134: out T28 _ _ 
135: = 1 _ i 
136: <= i 12 138 
137: jump _ _ 145 
138: par i CV _ 
139: par T29 RET _ 
140: call isPrime _ _ 
141: out T29 _ _ 
142: + i 1 T30 
143: = T30 _ i 
144: jump _ _ 136 
145: out counterFunctionCalls _ _ 
